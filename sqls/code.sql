CREATE TABLE CODE_BOOK.OP_CODE (
	id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
	code_type VARCHAR2(100) NOT NULL,
	code_issue_time TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
	code_str VARCHAR2(200) NOT NULL,
	other_ldc_codes VARCHAR2(500) NOT NULL,
	code_description VARCHAR2(750) NOT NULL,
	code_execution_time TIMESTAMP NOT NULL,
	code_tags TIMESTAMP NOT NULL,
	code_issued_by VARCHAR2(500) NOT NULL,
	is_code_cancelled NUMBER(1) default 0 NOT NULL,
	pwc_sd_req_id NUMBER,
	pwc_rto_id NUMBER(38, 0),
	is_deleted_at_src NUMBER(1) default 0 NOT NULL,
	pwc_element_id NUMBER(38, 0),
	pwc_element_type_id NUMBER(38, 0),
	pwc_outage_type_id NUMBER(38, 0),
	pwc_element_name VARCHAR2(500),
	pwc_element_type VARCHAR2(250),
	pwc_outage_type VARCHAR2(100),
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP,
	is_deleted NUMBER(1) default 0 NOT NULL,
	CHECK (
		code_type IN (
			'Generic',
			'ApprovedOutage',
			'Outage',
			'Revival',
			'Element'
		)
	),
	CHECK (is_code_cancelled IN (0, 1)),
	CHECK (is_deleted_at_src IN (0, 1)),
	CHECK (is_deleted IN (0, 1))
);
/* trigger for 'updated_at' column */
CREATE OR REPLACE TRIGGER on_op_code_update BEFORE
UPDATE ON CODE_BOOK.OP_CODE FOR EACH ROW BEGIN :new.updated_at := CURRENT_TIMESTAMP;
END;